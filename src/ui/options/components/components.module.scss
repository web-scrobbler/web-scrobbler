.tripleCheckboxOption {
	span {
		align-items: center;
		display: flex;
		font-size: 1.2em;
		gap: 0.5em;
		justify-content: space-between;
		padding: 0.5em 0;
	}

	.tripleCheckboxWrapper {
		border-radius: 0.5em;
		display: flex;
		overflow: hidden;

		.tripleCheckboxLabel {
			align-items: center;
			background-color: var(--background);
			color: var(--text);
			cursor: pointer;
			display: flex;
			height: 1.75em;
			justify-content: center;
			margin: 0;
			width: 2.25em;

			&.unchecked {
				color: var(--last-fm);

				&.activeBox,
				&:hover {
					background-color: var(--last-fm);
					color: var(--always-light);
				}
			}

			&.checked {
				color: var(--confirm);

				&.activeBox,
				&:hover {
					background-color: var(--confirm);
					color: var(--always-light);
				}
			}

			&.indeterminate {
				&.activeBox,
				&:hover {
					background-color: var(--checkbox-inactive);
					color: var(--always-light);
				}
			}
		}

		.tripleCheckbox {
			-webkit-appearance: none;
			background-color: #fff;
			height: 0;
			margin: 0;
			width: 0;
		}
	}
}

.deleteListing {
	align-items: center;
	display: flex;

	&:not(:last-child) {
		margin-bottom: 0.5em;
	}

	span {
		font-size: 1.2em;
	}
}

.buttonContainer {
	display: flex;
	gap: 0.5em;
}

.linkButton,
.editButton,
.deleteEditButton,
.patternAddButton,
.resetButton {
	border-radius: 3px;
}

.deleteEditButton {
	margin-right: 0.5em;
}

.linkButton,
.editButton,
.patternAddButton,
.resetButton {
	font-size: 1.2em;
	padding: 0.5em 1em;
	white-space: nowrap;

	svg {
		margin-right: 0.2em;
	}
}

.linkButton,
.editButton,
.deleteEditButton,
.patternDeleteButton,
.patternAddButton,
.resetButton {
	align-items: center;
	background-color: var(--always-last-fm);
	border: none;
	color: var(--always-light);
	cursor: pointer;
	display: flex;
	width: min-content;

	&:hover {
		background-color: var(--always-last-fm-hover);
	}

	span {
		white-space: nowrap;
	}
}

.linkButton svg {
	margin-bottom: 4px;
}

.editButton svg,
.patternAddButton svg {
	margin-left: -5px;
}

.contactList {
	padding-left: 0;

	.contactEntry {
		align-items: center;
		display: flex;
		padding: 0.5em 0;

		.invertImg {
			filter: var(--invert-filter);
		}

		span {
			color: var(--text);
			font-size: 1.2em;

			&:not(.brandText) {
				margin-left: 0.4em;
			}
		}

		svg {
			color: var(--text);
			height: 32px;
			width: 32px;
		}

		.githubSpan {
			margin-top: 4px;
		}

		.twitterSpan {
			color: #1c9bef;
			margin-top: 5px;
		}

		.privacySpan {
			margin-top: 5px;
		}

		.brandText {
			font-size: 1.7em;
			font-stretch: ultra-condensed;
			font-weight: bold;
			margin-left: 5px;
		}

		.twitterBrandText {
			color: #1c9bef;
		}
	}
}

.optionList {
	list-style-type: none;
	padding-left: 0;
	width: max-content;
}

.selectOption {
	.bigLabel {
		align-items: center;
		cursor: pointer;
		display: flex;
		font-size: 1.2em;
		gap: 0.5em;
		padding: 0.5em 0;
	}

	select {
		background-color: var(--background);
		border: none;
		border-radius: 0.5em;
		color: var(--text);
		display: inline-block;
		font-size: 1em;
		margin-left: auto;
		padding: 0.25em 0.5em;
	}
}

.checkboxOption {
	$tick-size: 1.05em;
	$checkbox-size: 1.4em;
	$tick-width: 2.5em;
	$tick-offset: calc(($checkbox-size - $tick-size) / 2);

	input {
		-webkit-appearance: none;
		appearance: none;
	}

	.checkboxWrapper {
		background-color: var(--checkbox-inactive);
		border-radius: $checkbox-size;
		display: inline-block;
		height: $checkbox-size;
		margin-left: auto;
		position: relative;
		width: $tick-width;
		z-index: -1;

		.checkbox {
			background-color: var(--always-light);
			border-radius: $tick-size;
			display: inline-block;
			height: $tick-size;
			left: $tick-offset;
			position: absolute;
			top: $tick-offset;
			transition: left 0.2s ease-in-out;
			width: $tick-size;
		}
	}

	input:checked ~ .checkboxWrapper {
		background-color: var(--always-last-fm);

		.checkbox {
			left: calc($tick-width - $tick-offset - $tick-size);
		}
	}

	.bigLabel,
	.summarySpan {
		align-items: center;
		cursor: pointer;
		display: flex;
		font-size: 1.2em;
		gap: 0.5em;
		padding: 0.5em 0;
	}

	&.summaryCheckbox .summarySpan {
		justify-content: space-between;

		label {
			cursor: pointer;
		}
	}

	.bigLabel:hover,
	&.summaryCheckbox .checkboxWrapper:hover {
		filter: brightness(1.1);
	}
}

.muted {
	color: var(--muted-text);
	max-width: 50vw;
}

summary {
	list-style: none;

	&::-webkit-details-marker {
		display: none;
	}
}

.radioButtons {
	li {
		margin-bottom: 1em;
	}

	input {
		-webkit-appearance: none;
		appearance: none;
		margin: 0;
	}

	.radioLabel {
		background-color: var(--background);
		border-radius: 0.5em;
		color: var(--text);
		cursor: pointer;
		display: inline-block;
		font-size: 1.2em;
		padding: 0.5em 1em;
	}

	.radioLabel:hover,
	input:checked + .radioLabel {
		background-color: var(--last-fm);
		color: var(--always-light);
	}
}

.connectorOptionsList {
	summary,
	& > li:first-child {
		align-items: center;
		display: flex;
		gap: 0.5em;
		width: 100%;

		.checkboxOption {
			flex-grow: 1;
		}
	}

	summary {
		cursor: pointer;
	}

	.expandVector {
		transition: transform 0.2s ease-in-out;
	}

	details[open] {
		.expandVector {
			transform: rotate(-180deg);
		}
	}
}

.patternWrapper {
	border-radius: 0.5em;
	display: flex;
	margin-bottom: 0.5em;
	overflow: hidden;
	width: max-content;

	.patternInput {
		background-color: var(--background);
		border: none;
		color: var(--text);
		font-size: 1.2em;
	}
}

.propLabel {
	display: block;
	font-size: 1em;
	margin-bottom: 0.5em;
}

.propInput {
	background-color: var(--background);
	border: none;
	border-radius: 0.5em;
	color: var(--text);
	font-size: 1em;
	margin-left: 0.5em;
	padding: 0.25em 0.5em;
}

.permissionsPopup {
	background-color: var(--sidebar-bg);
	color: var(--text);
	margin: 0;
	text-align: center;

	button {
		background: none;
		border: none;
		cursor: pointer;
		font-size: 1.25em;
		margin: 0;
		padding: 1em 15vw;
	}
}

.attentionWindow {
	background-color: var(--sidebar-bg);
	color: var(--text);
	font-size: 1.2em;
	line-height: 1.25;
	margin: 0 auto;
	padding: 1em;
	text-align: center;
	width: 80%;
}

.arrayPropWrapper {
	margin-bottom: 1rem;
	margin-top: 0.5rem;

	.arrayProps {
		align-items: center;
		display: flex;
		margin-bottom: 0.2rem;
	}

	.arrayProp:not(:last-child) {
		margin-right: 2rem;
	}
}

.regexDeleteContent {
	align-items: center;
	background: repeating-linear-gradient(
		var(--last-fm-bg) 0 2.5em,
		transparent 2.5em 5em
	);
	display: grid;
	gap: 0.5em 2em;
	grid-template:
		'. search replace' 2em
		'track tracksearch trackreplace' 2em
		'artist artistsearch artistreplace' 2em
		'album albumsearch albumreplace' 2em
		'albumartist albumartistsearch albumartistreplace' 2em / auto 1fr 1fr;
	margin: 0.75em 0;
	padding: 0.25em 1em;
	width: 100%;

	/**
	 * Set grid areas
	 */
	.regexDeleteSearchLabel {
		grid-area: search;
	}

	.regexDeleteReplaceLabel {
		grid-area: replace;
	}

	.regexDeleteTrackLabel {
		grid-area: track;
	}

	.regexDeleteTrackSearch {
		grid-area: tracksearch;
	}

	.regexDeleteTrackReplace {
		grid-area: trackreplace;
	}

	.regexDeleteArtistLabel {
		grid-area: artist;
	}

	.regexDeleteArtistSearch {
		grid-area: artistsearch;
	}

	.regexDeleteArtistReplace {
		grid-area: artistreplace;
	}

	.regexDeleteAlbumLabel {
		grid-area: album;
	}

	.regexDeleteAlbumSearch {
		grid-area: albumsearch;
	}

	.regexDeleteAlbumReplace {
		grid-area: albumreplace;
	}

	.regexDeleteAlbumArtistLabel {
		grid-area: albumartist;
	}

	.regexDeleteAlbumArtistSearch {
		grid-area: albumartistsearch;
	}

	.regexDeleteAlbumArtistReplace {
		grid-area: albumartistreplace;
	}
}

.saveIcon {
	transform: rotate(0deg);

	&.savingSaveIcon {
		transform: rotate(360deg);
		transform-origin: 41% 42.5%;
		transition: transform 600ms ease-in-out;
	}
}

.rangeInput {
	margin-top: 0.25em;

	.rangeInputLabel {
		font-size: 1.2em;
	}

	.rangeSelection {
		-webkit-appearance: none;
		appearance: none;
		background: transparent;
		cursor: pointer;
		margin: 1rem auto;
		width: 15rem;

		&::-webkit-slider-runnable-track {
			background: var(--checkbox-inactive);
			border-radius: 0.5rem;
			height: 0.5rem;
		}

		&::-moz-range-track {
			background: var(--checkbox-inactive);
			border-radius: 0.5rem;
			height: 0.5rem;
		}

		&::-moz-range-thumb {
			background-color: var(--always-last-fm);
			border: none;
			border-radius: 0.25rem;
			height: 1.5rem;
			width: 1rem;
		}

		&::-webkit-slider-thumb {
			-webkit-appearance: none;
			appearance: none;
			background-color: var(--always-last-fm);
			border-radius: 0.25rem;
			height: 1.5rem;
			margin-top: -0.5rem;
			width: 1rem;
		}

		&:hover,
		&:focus {
			&::-webkit-slider-thumb {
				background-color: var(--always-last-fm-hover);
				outline: none;
			}

			&::-moz-range-thumb {
				background-color: var(--always-last-fm-hover);
				outline: none;
			}
		}
	}

	.inputWrapper {
		display: inline-block;
		margin: auto 0.5em;
		position: relative;

		&::after {
			font-size: 1.2em;
			pointer-events: none;
			position: absolute;
			right: 0.5em;
			top: calc(2px + 0.125em);
			transition: all 0.05s ease-in-out;
		}

		&.percent::after {
			content: '%';
		}

		.rangeNumberInput {
			&::-webkit-outer-spin-button,
			&::-webkit-inner-spin-button {
				-webkit-appearance: none;
				margin: 0;
			}
			-moz-appearance: textfield;
			appearance: textfield;
			border: none;
			border-radius: 0.5em;
			font-size: 1.2em;
			padding: 0.25em 1.5em 0.25em 0.5em;
			width: 3ch;
		}
	}
}

.topSpacing {
	margin-top: 0.5em;
}
